¡Listo! Te armé un programa en C que cumple el enunciado: matriz de agenda (L–V, 9:00–18:00), menú para agendar y mostrar agenda, con validaciones (día, hora y choque de reserva). Ojo: el PDF dice “8 columnas” pero esas horas (9:00–18:00) son 9 franjas; usé 9 porque incluye 17:00–18:00 (si tu profe insiste en 8, te digo abajo cómo ajustarlo).  ￼

Código C (solo main, sin funciones personalizadas ni structs)

Copia esto en Ejercicio_TUAPELLIDO.c:

#include <stdio.h>

int main(void) {
    /* agenda[dia][slot] = 0 libre, 1 reservado
       dias: 0..4  (0=Lunes, 4=Viernes)
       slots: 0..8 (0=9-10, 1=10-11, ..., 8=17-18) */
    int agenda[5][9] = {0};

    const char *diasN[5] = {"Lunes", "Martes", "Miércoles", "Jueves", "Viernes"};
    const char *horasN[9] = {
        "09:00-10:00", "10:00-11:00", "11:00-12:00",
        "12:00-13:00", "13:00-14:00", "14:00-15:00",
        "15:00-16:00", "16:00-17:00", "17:00-18:00"
    };

    int opcion;
    do {
        printf("\n=== AGENDA JUANITO (paseo de perros) ===\n");
        printf("1) Agendar contrato\n");
        printf("2) Mostrar agenda\n");
        printf("3) Salir\n");
        printf("Elija una opcion: ");
        if (scanf("%d", &opcion) != 1) {
            // limpiar entrada no numerica
            int c; while ((c = getchar()) != '\n' && c != EOF);
            opcion = -1;
        }

        if (opcion == 1) {
            int d, s;
            printf("\n--- Agendar contrato ---\n");
            printf("Dias: 1=Lunes, 2=Martes, 3=Miercoles, 4=Jueves, 5=Viernes\n");
            printf("Ingrese dia (1-5): ");
            if (scanf("%d", &d) != 1) { int c; while ((c=getchar())!='\n' && c!=EOF); d = -1; }

            printf("\nFranjas horarias:\n");
            for (int i = 0; i < 9; i++) {
                printf("%d) %s\n", i+1, horasN[i]);
            }
            printf("Ingrese franja (1-9): ");
            if (scanf("%d", &s) != 1) { int c; while ((c=getchar())!='\n' && c!=EOF); s = -1; }

            // validaciones
            if (d < 1 || d > 5) {
                printf("** Error: dia fuera de rango. Debe ser 1-5.\n");
                continue;
            }
            if (s < 1 || s > 9) {
                printf("** Error: franja fuera de rango. Debe ser 1-9.\n");
                continue;
            }

            // ajustar a indices base 0
            d--; s--;

            if (agenda[d][s] == 1) {
                printf("** Conflicto: %s %s ya esta RESERVADO.\n", diasN[d], horasN[s]);
            } else {
                agenda[d][s] = 1;
                printf("OK: reservado %s %s.\n", diasN[d], horasN[s]);
            }

        } else if (opcion == 2) {
            printf("\n--- Mostrar agenda ---\n");

            // Encabezado de horas
            printf("%-12s", ""); // espacio para columna de dias
            for (int s = 0; s < 9; s++) {
                printf("%-13s", horasN[s]);
            }
            printf("\n");

            // Filas por dia
            for (int d = 0; d < 5; d++) {
                printf("%-12s", diasN[d]);
                for (int s = 0; s < 9; s++) {
                    printf("%-13s", agenda[d][s] ? "RESERVADO" : "LIBRE");
                }
                printf("\n");
            }

            // Resumen rapido de disponibles
            int libres = 0, ocupados = 0;
            for (int d = 0; d < 5; d++) {
                for (int s = 0; s < 9; s++) {
                    if (agenda[d][s]) ocupados++; else libres++;
                }
            }
            printf("\nTotal LIBRE: %d | Total RESERVADO: %d\n", libres, ocupados);

        } else if (opcion == 3) {
            printf("Saliendo...\n");
        } else {
            printf("** Opcion invalida. Intente de nuevo.\n");
        }

    } while (opcion != 3);

    return 0;
}

Cómo compilar y probar
	•	Compila: gcc Ejercicio_TUAPELLIDO.c -o agenda
	•	Ejecuta: ./agenda
	•	Revisa que:
	•	Opción 1 no deje reservar fuera de día 1–5 ni franja 1–9.
	•	Si intentas reservar dos veces la misma celda, avise conflicto.
	•	Opción 2 muestre la matriz completa con “LIBRE/RESERVADO”.

Ajustes rápidos según el profe
	•	Si exige 8 columnas (hasta 16:00–17:00):
	•	Cambia agenda[5][9] → agenda[5][8].
	•	Borra el último elemento de horasN (17:00–18:00).
	•	Cambia todos los bucles que van a <9 por <8.
	•	Valida franja (1-8).

Sugerencias para el 10/10 (según el criterio)
	•	Funcionalidad: ya cubre mostrar y agendar con choque de reservas.
	•	Matriz bien usada: índices por día/slot, actualización y consulta OK.
	•	Validaciones: día, franja y conflicto implementados.
	•	Interacción: menú claro, mensajes amigables, manejo de opción inválida.
	•	Entrega: sigue el formato de nombres de carpeta/archivo y sube a tu GitHub como piden (ej. Ejercicio1_APELLIDO1_APELLIDO2.c).  ￼

¿Quieres que lo deje en versión “8 columnas” exacta o añadir una opción cancelar reserva para practicar más validaciones?
